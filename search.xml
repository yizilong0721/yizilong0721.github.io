<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HEXO博客部署到云服务器上</title>
      <link href="/post/86a987db.html"/>
      <url>/post/86a987db.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>已经搭建完毕的本地博客</li><li>一台windows/mac电脑</li><li>一台云服务器（本教程以阿里云为例）</li><li>本地电脑安装一个ssh连接工具</li></ul><p>只要按照本教程来基本上就是复制粘贴的事情，有的小细节可能需要自己注意下</p><h1 id="服务器上安装配置git"><a href="#服务器上安装配置git" class="headerlink" title="服务器上安装配置git"></a>服务器上安装配置git</h1><h2 id="安装依赖工具包"><a href="#安装依赖工具包" class="headerlink" title="安装依赖工具包"></a>安装依赖工具包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel </span><br></pre></td></tr></table></figure><h2 id="安装编译工具"><a href="#安装编译工具" class="headerlink" title="安装编译工具"></a>安装编译工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc perl-ExtUtils-MakeMaker package</span><br></pre></td></tr></table></figure><h2 id="删除旧版本git"><a href="#删除旧版本git" class="headerlink" title="删除旧版本git"></a>删除旧版本git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove git -y</span><br></pre></td></tr></table></figure><h2 id="回到根目录"><a href="#回到根目录" class="headerlink" title="回到根目录"></a>回到根目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure><h2 id="下载git到家目录"><a href="#下载git到家目录" class="headerlink" title="下载git到家目录"></a>下载git到家目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.34.0.tar.gz --no-check-certificate</span><br></pre></td></tr></table></figure><p>如果提示没有<code>wget</code>命令,先安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure></p><h2 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf git-2.34.0.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>进入到git目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> git-2.34.0</span><br></pre></td></tr></table></figure><br>编译(时间可能有点久，稍微等待一下)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make all prefix=/usr/local/git</span><br></pre></td></tr></table></figure><br>安装git到/usr/local/git下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install prefix=/usr/local/git</span><br></pre></td></tr></table></figure></p><h2 id="配置git环境变量"><a href="#配置git环境变量" class="headerlink" title="配置git环境变量"></a>配置git环境变量</h2><p>将git加入PATH目录中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/git/bin&#x27;</span> &gt;&gt; /etc/bashrc</span><br></pre></td></tr></table></figure><br>使配置生效<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure><br>查看git版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></p><h1 id="创建用户配置SSH"><a href="#创建用户配置SSH" class="headerlink" title="创建用户配置SSH"></a>创建用户配置SSH</h1><h2 id="创建用户并设置密码"><a href="#创建用户并设置密码" class="headerlink" title="创建用户并设置密码"></a>创建用户并设置密码</h2><p>这里的username改成你自己的用户名，并且为用户设置一个密码。<br>例如:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">passwd  a1234567</span><br></pre></td></tr></table></figure><br><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/13704/1b6789f8ccab4e8fa037de942449cff5.png" alt="设置密码"><br>我这里密码设置的太简单了，所以他就会有提示信息但是不用管他</p><h2 id="为用户分配权限"><a href="#为用户分配权限" class="headerlink" title="为用户分配权限"></a>为用户分配权限</h2><p>把用户添加到wheel组<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod [username] -G wheel</span><br></pre></td></tr></table></figure></p><h2 id="本地创建密钥"><a href="#本地创建密钥" class="headerlink" title="本地创建密钥"></a>本地创建密钥</h2><p>在本机电脑终端输入(cmd)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><br><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/13704/image-20221205203823615.png" alt=""><br>第一次回车后输入y后面就是一直回车了，新建一个密钥，注意如果之前你将你的本地hexo博客部署到GitHub的时候生成的那个密钥是不可用的一定要重新生成这个密钥，不然上传的时候就会出错。<br>一般来说在你创建的时候命令行会提示你密钥文件的路径，windows电脑一般是C:\Users\Administrator.ssh</p><p>复制id_rsa.pub文件中的内容备用。</p><h2 id="配置公钥"><a href="#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h2><p>回到服务器终端，切换用户</p><p>username就是你刚刚添加的用户<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - [username]</span><br></pre></td></tr></table></figure><br>创建.ssh文件夹<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> .ssh</span><br></pre></td></tr></table></figure><br>新建authorized_keys<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .ssh/authorized_keys</span><br></pre></td></tr></table></figure><br>如果提示没有vim，则先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y vim</span><br></pre></td></tr></table></figure><br>将刚刚id_rsa.pub公钥中的内容，复制粘贴到文件里，保存退出。（注意这里是输入i编辑，esc退出编辑模式，:wq保存）</p><h1 id="git仓库配置"><a href="#git仓库配置" class="headerlink" title="git仓库配置"></a>git仓库配置</h1><p>退出用户登录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><br>此时应该是root用户，创建git目录，并修改目录的所有权和用户权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/git/</span><br><span class="line"><span class="built_in">chown</span> -R [username]:[username] /home/git/</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /home/git/</span><br></pre></td></tr></table></figure><br>进入目录，建立git仓库，修改权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git/</span><br><span class="line">git init --bare blog.git</span><br><span class="line"><span class="built_in">chown</span> [username]:[username] -R blog.git</span><br></pre></td></tr></table></figure><br>新建钩子文件 post-receive<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /home/git/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><br>进入文本编辑器，粘贴下面两行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/home/blog --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure><br>保存退出。然后修改文件权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /home/git/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><h1 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h1><p>首先创建blog目录用户nginx转发<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/blog/</span><br><span class="line"><span class="built_in">chown</span> -R [username]:[username] /home/blog/</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /home/blog/</span><br></pre></td></tr></table></figure></p><h2 id="第一种方法安装nginx"><a href="#第一种方法安装nginx" class="headerlink" title="第一种方法安装nginx"></a>第一种方法安装nginx</h2><p>两种方法任选其一，如果yum安装成功就不用第二种。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><br>启动nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure><br>查看nginx服务状态，绿色的active说明启动成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure></p><h2 id="第二种方法安装nginx"><a href="#第二种方法安装nginx" class="headerlink" title="第二种方法安装nginx"></a>第二种方法安装nginx</h2><p>针对yum无法安装的情况，这里介绍第二种方法，源码安装。<br>回到家目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure><br>下载安装包，鉴于下载地址的时效性，附上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.21.4.tar.gz</span><br></pre></td></tr></table></figure><br>解压<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf nginx-1.21.4.tar.gz</span><br></pre></td></tr></table></figure><br>进入目录，编译安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nginx-1.21.4</span><br><span class="line">./configure</span><br><span class="line">make install prefix=/usr/local/nginx</span><br></pre></td></tr></table></figure><br>配置nginx环境变量，并使环境变量生效<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/nginx/sbin&#x27;</span> &gt;&gt; /etc/bashrc</span><br><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure><br>查看nginx版本号<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><br>配置Systemd服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><br>在文本编辑器中粘贴以下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp= <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><br>内容说明：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]:服务的说明</span><br><span class="line">Description:描述服务</span><br><span class="line">After:描述服务类别</span><br><span class="line">[Service]服务运行参数的设置</span><br><span class="line">Type=forking是后台运行的形式</span><br><span class="line">ExecStart为服务的具体运行命令</span><br><span class="line">ExecReload为重启命令</span><br><span class="line">ExecStop为停止命令</span><br><span class="line">PrivateTmp=True表示给服务分配独立的临时空间</span><br><span class="line">注意：[Service]的启动、重启、停止命令全部要求使用绝对路径</span><br><span class="line">[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</span><br></pre></td></tr></table></figure><br>设置开机自启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx.service</span><br></pre></td></tr></table></figure><br>重启电脑<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><br>重启后，查看nginx服务状态，绿色的active说明启动成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure></p><h2 id="修改nginx转发配置"><a href="#修改nginx转发配置" class="headerlink" title="修改nginx转发配置"></a>修改nginx转发配置</h2><p>在浏览器中输入服务器公网ip地址，测试是否能打开。<br>查看nginx的默认配置文件的安装位置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><br>修改nginx的默认配置，其中cd后边就是刚刚查到的安装位置，每个人可能都不一样，我这里是/usr/local/nginx/conf/nginx.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><br>在文本编辑器中找到如下位置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line">    root /home/blog;    <span class="comment"># 修改为创建的blog目录地址</span></span><br><span class="line">    server_name www.example.com; <span class="comment"># 需要修改为你的域名（或者公网ip）</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">    include /etc/nginx/default.d/*.conf;</span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">        location = /40x.html &#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>保存退出。重启nginx服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure></p><h1 id="在hexo站点配置文件中配置"><a href="#在hexo站点配置文件中配置" class="headerlink" title="在hexo站点配置文件中配置"></a>在hexo站点配置文件中配置</h1><p>打开你本地的hexo博客所在文件，打开站点配置文件_config.yml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: [username]@100.0.0.100:/home/git/blog.git   <span class="comment">#用户名@服务器Ip:git仓库位置</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><br>在本地hexo博客根目录下，打开终端，部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><br>如果提示ERROR Deployer not found:git错误，先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><br><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/13704/image-20221205211240381.png" alt=""><br>出现这个问题，删除known_hosts文件，可能是之前生成过，输入然后输入会让你输入密码，就是你的git用户密码</p><p>位置：C:\Users\Administrator.ssh</p><p>打开浏览器输入你的服务器公网ip，应该已经部署成功了</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>title”</title>
      <link href="/post/8cc4e8e3.html"/>
      <url>/post/8cc4e8e3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>电吹风，司空见惯之物，用来无甚出奇。又现代名物，古典未见，咏来空无依傍，能别开生面，其难一也。宋人张炎《词源》云：“诗难于咏物，词为尤难。”盖诗词分野，诸端异趣，诗于铺陈、议论见长，而词以抒情、寄托为妙。凡咏物多以赋笔而致比兴，故世人所称道之咏物词，多为慢词，若东坡《水龙吟·次韵章质夫杨花词》、清真《兰陵王·柳》、白石《暗香·旧时月色》诸调。作者能以《浣溪沙》一类小词咏物，更见其难。</p><p>此作上片以电吹风所用场景入题，因物比人。言使用者发无长短，尽皆吹之，若世间长短，不相计较；风过耳鬓，冷暖可知，而世间冷暖，亦轻轻诉诸。首二句写电吹风之特点，即词作者之襟抱，亦人世间之理趣。下句为上片作结，电吹风既能干发，又有造型之用，故可“看舒看卷”，发之舒卷，若云之舒卷，电吹风日日如此，流光抛掷，漫随而已。电吹风如是，作者亦如是，上二句即有着落。过片近乎赋，描摹使用电吹风之细节，首句写风著青丝，飘飞渐少，次句对以“白雪”，似用“朝如青丝暮成雪”典，青丝渐白，随风聚散。对仗工稳，描摹细致。又“已著”“更吹”，用虚词而有递进之感，下片故不板滞。人乃使用电吹风之主体，末句却反其意而道，写无人之境。上片末句作“流光”，此处作“斜阳”，流光渐度，如白日渐落，已近斜阳，青丝如雪，不堪再吹，故于无人处叹之。</p><p>张炎论及咏物词之难又云：“体认稍真，则拘而不畅；模写差远，则晦而不明。”王渔洋《带经堂诗话》亦云：“咏物之作，须如禅家所谓不粘不脱,不即不离，乃为上乘。”凡咏物词着物太近，易死于句下，枯燥无味；着物太远，又不知所云，晦暗难通。远近之道，宜取其中，正如王渔洋所言，需“不即不离”“若即若离”，近取物之特点，远出我之精神。又况周颐《蕙风词话》云：“以性灵语咏物，以沉著之笔达出，斯为无上上乘。”词于不即不离之间，联系物我，需兼“性灵”与“沉著之笔”，有“性灵”方能不即，有“沉著之笔”始可不离。</p><p>好嘞</p><p>以上《浣溪沙•电吹风》，深得个中三昧，不即不离，物象世情妙合无垠，读之如见其物，如怀其情。小词咏物亦有举轻若重之感，可见作者功力。此作不足之处在于章法，过片与上片结构相似，略显重复。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
